import time
from datetime import datetime
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support.ui import Select
from selenium.webdriver.support import expected_conditions as EC

# URL and parameters
website_url = 'https://foreupsoftware.com/index.php/booking/19765/2431#teetimes'
date_to_click = 20
time_label_to_click = '2:27pm'

# Set up Chrome options
chrome_options = Options()
chrome_options.add_argument("--start-maximized")
chrome_options.add_experimental_option("debuggerAddress", "localhost:9222")  # Use your existing Chrome debugging address

# Initialize WebDriver
driver = webdriver.Chrome(options=chrome_options)

try:
    # Wait until the specified time to start
    target_time = datetime.now().replace(hour=18, minute=59, second=59, microsecond=25)
    while datetime.now() < target_time:
        time.sleep(1)

    # Open the website
    print("Opening website...")
    driver.get(website_url)

    # Wait for the page to load completely
    WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.TAG_NAME, "body"))
    )
    print("Page loaded.")

    # Click on the Resident button
    WebDriverWait(driver, 20).until(
        EC.element_to_be_clickable((By.XPATH, '//button[@class="btn btn-primary col-md-4 col-xs-12 col-md-offset-4" and text()="Verified NYS Resident - Bethpage Only"]'))
    ).click()

    # Select the Green Course option
    select_element = WebDriverWait(driver, 20).until(
        EC.presence_of_element_located((By.ID, "schedule_select"))
    )
    select = Select(select_element)
    print("Selecting the Green Course option...")
    select.select_by_value("2433")

    time.sleep(1)

    # Click on the specified date
    print(f"Waiting for date {date_to_click} to be clickable...")
    date_element = WebDriverWait(driver, 30).until(
        EC.element_to_be_clickable((By.XPATH, f'//td[@class="day" and text()="{date_to_click}"]'))
    )
    print(f"Clicking on date {date_to_click}...")
    date_element.click()

    # Add a small sleep to ensure the date click is processed
    time.sleep(1)

    # Scroll to the top of the page
    print("Scrolling to the top of the page...")
    driver.execute_script("window.scrollTo(0, 0);")

    # Add a small sleep to ensure the scroll action is completed
    time.sleep(1)

    # Click on the specified time tile
    print(f"Waiting for time label {time_label_to_click} to be clickable...")
    time_tile_element = WebDriverWait(driver, 30).until(
        EC.element_to_be_clickable((By.XPATH, f'//div[@class="time time-tile" and .//div[@class="booking-start-time-label" and text()="{time_label_to_click}"]]'))
    )
    print(f"Clicking on time tile containing label {time_label_to_click}...")
    time_tile_element.click()

    # Select number of players
    print("Waiting for number of players button to be clickable...")
    number_element = WebDriverWait(driver, 20).until(
        EC.element_to_be_clickable((By.XPATH, '//a[@class="btn btn-primary " and @data-value="4"]'))
    )
    print("Clicking number of players button...")
    number_element.click()

    # Click the 'Book Time' button
    print("Waiting for Book Time button to be clickable...")
    book_button = WebDriverWait(driver, 20).until(
        EC.element_to_be_clickable((By.XPATH, '//button[@class="btn btn-success js-book-button pull-left"]'))
    )
    print("Clicking Book Time button...")
    book_button.click()

    # Wait to see the result
    time.sleep(10)

except Exception as e:
    print(f"An error occurred: {e}")
    # Print the current page source for debugging
    print("Current page source:")
    print(driver.page_source)

finally:
    # Close the WebDriver session
    print("Closing the WebDriver session...")
    driver.quit()
